pipeline {
    agent any

    environment {
        NETLIFY_AUTH_TOKEN = credentials('netlify-auth-token')
        NETLIFY_SITE_ID = credentials('netlify-site-id')
    }

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üèóÔ∏è Building the project..."
                    sh '''
                    npm install
                    npx react-scripts build'''
                }
            }
            post {
                success {
                    echo "‚úÖ Build Successful! üéâ"
                }
                failure {
                    echo "‚ùå Build Failed! Check logs for details."
                }
            }
        }

        // Run tests (if applicable)
        stage('Test') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üî¨ Running tests..."
                    sh 'npm test'  // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
                }
            }
            post {
                success {
                    echo "‚úÖ Test Successful! üéâ"
                }
                failure {
                    echo "‚ùå Test Failed! Check logs for details."
                }
            }
        }

        // Deploy to Netlify
        stage('Deploy to Netlify') {
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
                script {
                    echo "üöÄ Deploying to Netlify..."
                    sh '''
                    npx netlify deploy --prod --dir=build \
                    --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
                    '''
                }
            }
            post {
                success {
                    echo "‚úÖ Deployment Successful! üéâ"
                    echo "üëâ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ó‡∏µ‡πà: https://kbdevopfn.netlify.app/"
                }
                failure {
                    echo "‚ùå Deployment Failed! Check logs for details."
                }
            }
        }

        // Post deploy actions, e.g., notify Slack, send emails, etc.
        stage('Post Deploy') {
            agent any
            steps {
                script {
                    echo "üîç Monitoring server resources during the test..."
            
                    // Run resource monitoring commands and save output
                    try {
                        sh '''
                            echo "Top 10 processes by memory usage:" > resource_report.txt
                            ps aux --sort=-%mem | head -n 10 >> resource_report.txt
                            
                            echo "\nMemory usage:" >> resource_report.txt
                            free -h >> resource_report.txt
                            
                            echo "\nSystem performance stats (vmstat):" >> resource_report.txt
                            vmstat 1 5 >> resource_report.txt
                        '''
                    } catch (e) {
                        echo "Error monitoring server resources: ${e}"
                    }
                }
            }
            post {
                success {
                    echo "‚úÖ Resource monitoring completed successfully! Here are the results:"
                    sh 'cat resource_report.txt'  // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
                }
                failure {
                    echo "‚ùå Resource monitoring encountered an error!"
                }
            }
        }
    }

}
